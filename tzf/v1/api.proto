syntax = "proto3";

option go_package = "github.com/ringsaturn/tzf-server/tzf/v1;v1";

package tzf.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto"; // Add this import statement

// Simple server convert longitude&latitude to timezone name(s).
// The server also provides timezone name list.
//
// Please note that this service is for demonstration purpose only and
// should not be used in production.
//
// Use https://github.com/ringsaturn/tzf as internal library.
service TZFService {
  option (google.api.default_host) = "0.0.0.0:8080";

  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get: "/api/v1/ping"
    };
  }

  // GetTimezone returns timezone name by longitude and latitude.
  rpc GetTimezone(GetTimezoneRequest) returns (GetTimezoneResponse) {
    option (google.api.http) = {
      get: "/api/v1/tz"
    };
  }

  // GetTimezones returns timezone names by longitude and latitude.
  rpc GetTimezones(GetTimezonesRequest) returns (GetTimezonesResponse) {
    option (google.api.http) = {
      get: "/api/v1/tzs"
    };
  }

  // GetAllTimezones returns all timezone names.
  rpc GetAllTimezones(GetAllTimezonesRequest) returns (GetAllTimezonesResponse) {
    option (google.api.http) = {
      get: "/api/v1/tzs/all"
    };
  }

}

message PingRequest {}

message PingResponse {
  google.protobuf.Any data = 1;
}

message GetTimezoneRequest {
  // @gotags: query:"longitude" vd:"$>=-180 && $<=180"
  double longitude = 1 [(google.api.field_behavior) = REQUIRED];

  // @gotags: query:"latitude" vd:"$>=-90 && $<=90"
  double latitude = 2 [(google.api.field_behavior) = REQUIRED];
};

message GetTimezonesRequest {
  // @gotags: query:"longitude" vd:"$>=-180 && $<=180"
  double longitude = 1 [(google.api.field_behavior) = REQUIRED];

  // @gotags: query:"latitude" vd:"$>=-90 && $<=90"
  double latitude = 2 [(google.api.field_behavior) = REQUIRED];
};

message GetTimezoneResponse {
  string timezone                 = 1;  // timezone name
  string abbreviation             = 2;  // timezone abbreviation
  google.protobuf.Duration offset = 3;  // timezone offset
}

message GetTimezonesResponse {
  repeated GetTimezoneResponse timezones = 1;
}

message GetAllTimezonesRequest {}

message GetAllTimezonesResponse {
  repeated GetTimezoneResponse timezones = 1;
}
